# @LH & @HonestBrothers - Tweaked based on Ellis' speed test macro: https://ellis3dp.com/Print-Tuning-Guide/articles/determining_max_speeds_accels.html
# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
#
# Example: TEST_SPEED AXIS=XY SPEED=300 ACCEL=15000 SCV_=60 CRUISE_RATIO=0 HOME=0 ITERATIONS=1 


[gcode_macro TEST_SPEED]
gcode:
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(1)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.BOUND|default(40)|int %}
    # Size for small pattern box
    {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
    # Select which axis to test
    {% set axis = params.AXIS|default("XY")|upper %}
    {% set home = params.HOME|default(0)|int %}
    {% set scvs = params.SCV_|default(printer.configfile.settings.printer.square_corner_velocity)|int %}
    {% set zpos = params.ZPOS|default(20)|int %}
    {% set cruise = params.CRUISE_RATIO|default(0.0)|float %}


    
    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = printer.toolhead.axis_minimum.y + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}
    
    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
        
        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}

    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=TEST_SPEED
    
    # Output parameters to g-code terminal
    { action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d, scv, %s, on axis %s" % (iterations, speed, accel, scvs, axis)) }
    
    # Home and get position for comparison later:
    {% if home == 1 %}
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28
        # QGL if not already QGLd (only if QGL section exists in config)
        {% if printer.configfile.settings.quad_gantry_level %}
            {% if printer.quad_gantry_level.applied == False %}
                QUAD_GANTRY_LEVEL
                G28 Z
            {% endif %}
        {% endif %} 
        # Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
        G90
        G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{80*60}
        M400 
        G28 X Y
        G0 X{printer.toolhead.axis_maximum.x-4} Y{printer.toolhead.axis_maximum.y-4} F{80*60}
        G4 P1000 
        GET_POSITION
    {% endif %}

    # Go to starting position
    G0 Y{y_min} Z{zpos} F{speed*60}

    # Set new limits
    SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} MINIMUM_CRUISE_RATIO={cruise} SQUARE_CORNER_VELOCITY={scvs}

    {% for i in range(iterations) %}
      {% if axis == "XY" %}
        # Large pattern
            # Diagonals
            G0 X{x_min} Y{y_min} F{speed*60}
            G0 X{x_max} Y{y_max} F{speed*60}
            G0 X{x_min} Y{y_min} F{speed*60}
            G0 X{x_max} Y{y_min} F{speed*60}
            G0 X{x_min} Y{y_max} F{speed*60}
            G0 X{x_max} Y{y_min} F{speed*60}
            
            # Box
            G0 X{x_min} Y{y_min} F{speed*60}
            G0 X{x_min} Y{y_max} F{speed*60}
            G0 X{x_max} Y{y_max} F{speed*60}
            G0 X{x_max} Y{y_min} F{speed*60}
        
        # Small pattern
            # Small diagonals 
            G0 X{x_center_min} Y{y_center_min} F{speed*60}
            G0 X{x_center_max} Y{y_center_max} F{speed*60}
            G0 X{x_center_min} Y{y_center_min} F{speed*60}
            G0 X{x_center_max} Y{y_center_min} F{speed*60}
            G0 X{x_center_min} Y{y_center_max} F{speed*60}
            G0 X{x_center_max} Y{y_center_min} F{speed*60}
            
            # Small box
            G0 X{x_center_min} Y{y_center_min} F{speed*60}
            G0 X{x_center_min} Y{y_center_max} F{speed*60}
            G0 X{x_center_max} Y{y_center_max} F{speed*60}
            G0 X{x_center_max} Y{y_center_min} F{speed*60}

            # Small fill
            G0 X{x_center_min+5} Y{y_center_min+5} F{speed*60}
            G0 X{x_center_max-5} Y{y_center_max-5} F{speed*60}
            G0 X{x_center_min+5} Y{y_center_min+5} F{speed*60}
            G0 X{x_center_max-5} Y{y_center_max-5} F{speed*60}
            G0 X{x_center_min+5} Y{y_center_min+5} F{speed*60}
            G0 X{x_center_max-5} Y{y_center_max-5} F{speed*60}
            G0 X{x_center_min+5} Y{y_center_min+5} F{speed*60}
            G0 X{x_center_max-5} Y{y_center_max-5} F{speed*60}
            G0 X{x_center_min+5} Y{y_center_min+5} F{speed*60}
            G0 X{x_center_max-5} Y{y_center_max-5} F{speed*60}
            G0 X{x_center_min+5} Y{y_center_min+5} F{speed*60}
            G0 X{x_center_max-5} Y{y_center_max-5} F{speed*60}
            G0 X{x_center_min+5} Y{y_center_min+5} F{speed*60}
            G0 X{x_center_max-5} Y{y_center_max-5} F{speed*60}
            G0 X{x_center_min+5} Y{y_center_min+5} F{speed*60}
            G0 X{x_center_max-5} Y{y_center_max-5} F{speed*60}
            G0 X{x_center_min+5} Y{y_center_min+5} F{speed*60}
            
      {% elif axis == "Y" %}
        # Large pattern
            # Diagonals
            G0 Y{y_min} F{speed*60}
            G0 Y{y_max} F{speed*60}
            G0 Y{y_min} F{speed*60}
            G0 Y{y_max} F{speed*60}
            G0 Y{y_min} F{speed*60}
            G0 Y{y_max} F{speed*60}
            
            # Box
            G0 Y{y_min} F{speed*60}
            G0 Y{y_max} F{speed*60}
            G0 Y{y_min} F{speed*60}
            G0 Y{y_max} F{speed*60}
        
        # Small pattern
            # Small diagonals 
            G0 Y{y_center_min} F{speed*60}
            G0 Y{y_center_max} F{speed*60}
            G0 Y{y_center_min} F{speed*60}
            G0 Y{y_center_max} F{speed*60}
            G0 Y{y_center_min} F{speed*60}
            G0 Y{y_center_max} F{speed*60}
            
            # Small box
            G0 Y{y_center_min} F{speed*60}
            G0 Y{y_center_max} F{speed*60}
            G0 Y{y_center_min} F{speed*60}
            G0 Y{y_center_max} F{speed*60}

            # Small fill
            G0 Y{y_center_min+5} F{speed*60}
            G0 Y{y_center_max-5} F{speed*60}
            G0 Y{y_center_min+5} F{speed*60}
            G0 Y{y_center_max-5} F{speed*60}
            G0 Y{y_center_min+5} F{speed*60}
            G0 Y{y_center_max-5} F{speed*60}
            G0 Y{y_center_min+5} F{speed*60}
            G0 Y{y_center_max-5} F{speed*60}
            G0 Y{y_center_min+5} F{speed*60}
            G0 Y{y_center_max-5} F{speed*60}
            G0 Y{y_center_min+5} F{speed*60}
            G0 Y{y_center_max-5} F{speed*60}
            G0 Y{y_center_min+5} F{speed*60}
            G0 Y{y_center_max-5} F{speed*60}
            G0 Y{y_center_min+5} F{speed*60}
            G0 Y{y_center_max-5} F{speed*60}
            G0 Y{y_center_min+5} F{speed*60}
            
      {% elif axis == "X" %}
        # Large pattern
            # Diagonals
            G0 X{x_min} F{speed*60}
            G0 X{x_max} F{speed*60}
            G0 X{x_min} F{speed*60}
            G0 X{x_max} F{speed*60}
            G0 X{x_min} F{speed*60}
            G0 X{x_max} F{speed*60}
            
            # Box
            G0 X{x_min} F{speed*60}
            G0 X{x_max} F{speed*60}
            G0 X{x_min} F{speed*60}
            G0 X{x_max} F{speed*60}
        
        # Small pattern
            # Small diagonals 
            G0 X{x_center_min} F{speed*60}
            G0 X{x_center_max} F{speed*60}
            G0 X{x_center_min} F{speed*60}
            G0 X{x_center_max} F{speed*60}
            G0 X{x_center_min} F{speed*60}
            G0 X{x_center_max} F{speed*60}
            
            # Small box
            G0 X{x_center_min} F{speed*60}
            G0 X{x_center_max} F{speed*60}
            G0 X{x_center_min} F{speed*60}
            G0 X{x_center_max} F{speed*60}

            # Small fill
            G0 X{x_center_min+5} F{speed*60}
            G0 X{x_center_max-5} F{speed*60}
            G0 X{x_center_min+5} F{speed*60}
            G0 X{x_center_max-5} F{speed*60}
            G0 X{x_center_min+5} F{speed*60}
            G0 X{x_center_max-5} F{speed*60}
            G0 X{x_center_min+5} F{speed*60}
            G0 X{x_center_max-5} F{speed*60}
            G0 X{x_center_min+5} F{speed*60}
            G0 X{x_center_max-5} F{speed*60}
            G0 X{x_center_min+5} F{speed*60}
            G0 X{x_center_max-5} F{speed*60}
            G0 X{x_center_min+5} F{speed*60}
            G0 X{x_center_max-5} F{speed*60}
            G0 X{x_center_min+5} F{speed*60}
            G0 X{x_center_max-5} F{speed*60}
            G0 X{x_center_min+5} F{speed*60}
      {% else %}
          { action_respond_info("Please input AXIS= X, Y, or XY. Default is XY.") }
      {% endif %}
    
    {% endfor %}


    # Restore max speed/accel/cruise to their configured values
    SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio} SQUARE_CORNER_VELOCITY={printer.configfile.settings.printer.square_corner_velocity}
    {% if home == 1 %}
    # Re-home and get position again for comparison:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 # This is a full G28 to fix an issue with CoreXZ - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/12
        # Go to XY home positions (in case your homing override leaves it elsewhere)
        G90
        G0 X{printer.toolhead.axis_maximum.x-4} Y{printer.toolhead.axis_maximum.y-4} F{80*60}
        G4 P1000 
        GET_POSITION
    {% endif %}

    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=TEST_SPEED